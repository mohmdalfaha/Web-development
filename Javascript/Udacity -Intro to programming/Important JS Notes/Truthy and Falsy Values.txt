<html>
<head> <title> Truthy and Falsy Values </title> </head>
<body>
<h1> Truthy and Falsy </h1>
<p>
Every value in JavaScript has an inherent boolean value. When that value is evaluated in the context of a boolean expression, the value will be transformed into that inherent boolean value.

The paragraph above is pretty dense with information. You should probably re-read it again! ??

<h3>Falsy values</h3>
A value is falsy if it converts to false when evaluated in a boolean context. For example, an empty String "" is falsy because, "" evaluates to false. You already know if...else statements, so let's use them to test the truthy-ness of "".

<code>
if ("") {
    console.log("the value is truthy");
} else {
    console.log("the value is falsy");
}
Returns: "the value is falsy"
</code>

<h3>Here’s the list of all of the falsy values:</h3>
the Boolean value false
the null type
the undefined type
the number 0
the empty string ""
the odd value NaN (stands for "not a number", check out the NaN MDN article)
That's right, there are only six falsy values in all of JavaScript!

<h3>Truthy values</3>
A value is truthy if it converts to true when evaluated in a boolean context. For example, the number 1 is truthy because, 1 evaluates to true. Let's use an if...else statement again to test this out:

<code>
if (1) {
    console.log("the value is truthy");
} else {
    console.log("the value is falsy");
}

</code>

Returns: "the value is truthy"

Here are some other examples of truthy values:
<code>
true
42
"pizza"
"0"
"null"
"undefined"
{}
[]

</code>
Essentially, if it's not in the list of falsy values, then it's truthy!

